-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity relu_array_ap_fixed_8u_array_ap_ufixed_3_1_4_0_0_8u_relu_config8_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (2 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (2 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (2 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (2 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (2 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (2 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (2 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (2 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of relu_array_ap_fixed_8u_array_ap_ufixed_3_1_4_0_0_8u_relu_config8_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_79 : STD_LOGIC_VECTOR (6 downto 0) := "1111001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln41_reg_1247 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal data_V_data_4_V_blk_n : STD_LOGIC;
    signal data_V_data_5_V_blk_n : STD_LOGIC;
    signal data_V_data_6_V_blk_n : STD_LOGIC;
    signal data_V_data_7_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal icmp_ln41_reg_1247_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal i_0_reg_152 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln41_fu_163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op29 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal io_acc_block_signal_op201 : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln41_reg_1247_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_169_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_data_V_4_0_reg_1256 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_4_1_reg_1265 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_4_2_reg_1274 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_4_3_reg_1283 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_4_4_reg_1292 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_4_5_reg_1301 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_4_6_reg_1310 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_4_7_reg_1319 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln718_fu_211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_reg_1328 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1333 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_reg_1338 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_1_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_1_reg_1343 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_1348 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_1_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_1_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_2_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_2_reg_1358 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_1363 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_2_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_2_reg_1368 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_3_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_3_reg_1373 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_reg_1378 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_reg_1383 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_4_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_4_reg_1388 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_reg_1393 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_reg_1398 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_5_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_5_reg_1403 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_reg_1408 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_5_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_5_reg_1413 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_6_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_6_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_reg_1423 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_6_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_6_reg_1428 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_7_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_7_reg_1433 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_7_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_7_reg_1438 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_7_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_7_reg_1443 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_0_V_fu_553_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_0_V_reg_1448 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_1_V_fu_651_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_1_V_reg_1453 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_2_V_fu_749_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_2_V_reg_1458 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_3_V_fu_847_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_3_V_reg_1463 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_4_V_fu_945_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_4_V_reg_1468 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_5_V_fu_1043_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_5_V_reg_1473 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_6_V_fu_1141_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_6_V_reg_1478 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_7_V_fu_1239_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_7_V_reg_1483 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln718_fu_207_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_s_fu_217_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln718_1_fu_239_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_10_1_fu_249_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln718_2_fu_271_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_10_2_fu_281_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln718_3_fu_303_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_10_3_fu_313_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln718_4_fu_335_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_10_4_fu_345_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln718_5_fu_367_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_10_5_fu_377_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln718_6_fu_399_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_10_6_fu_409_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln718_7_fu_431_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_10_7_fu_441_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_46_fu_477_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_496_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_fu_509_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln_fu_468_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln415_fu_513_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_49_fu_519_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_484_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_fu_539_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_545_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_50_fu_575_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_1_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_594_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_1_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_1_fu_607_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln708_s_fu_566_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln415_1_fu_611_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_53_fu_617_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_582_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_1_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_1_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_1_fu_637_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_1_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1_fu_643_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_54_fu_673_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_2_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_692_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_2_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_2_fu_705_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln708_1_fu_664_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln415_2_fu_709_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_57_fu_715_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_680_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_2_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_2_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_2_fu_735_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_2_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_741_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_58_fu_771_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_3_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_790_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_3_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_3_fu_803_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln708_2_fu_762_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln415_3_fu_807_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_61_fu_813_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_778_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_3_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_3_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_3_fu_833_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_3_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_3_fu_839_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_62_fu_869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_4_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_888_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_4_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_4_fu_901_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln708_3_fu_860_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln415_4_fu_905_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_65_fu_911_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_876_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_4_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_4_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_4_fu_931_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_4_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_937_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_66_fu_967_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_5_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_986_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_5_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_5_fu_999_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln708_4_fu_958_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln415_5_fu_1003_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_69_fu_1009_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_5_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_5_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_5_fu_1029_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_5_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_5_fu_1035_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_70_fu_1065_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_6_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_1084_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_6_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_6_fu_1097_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln708_5_fu_1056_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln415_6_fu_1101_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_73_fu_1107_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_1072_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_6_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_6_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_6_fu_1127_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_6_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1133_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_74_fu_1163_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_7_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_1182_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_7_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_7_fu_1195_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln708_6_fu_1154_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln415_7_fu_1199_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_77_fu_1205_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_1170_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_7_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_7_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_7_fu_1225_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_7_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_7_fu_1231_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_fu_163_p2 = ap_const_lv1_0))) then 
                i_0_reg_152 <= i_fu_169_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_152 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln41_reg_1247 <= icmp_ln41_fu_163_p2;
                icmp_ln41_reg_1247_pp0_iter1_reg <= icmp_ln41_reg_1247;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln41_reg_1247_pp0_iter2_reg <= icmp_ln41_reg_1247_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247 = ap_const_lv1_0))) then
                icmp_ln718_1_reg_1343 <= icmp_ln718_1_fu_243_p2;
                icmp_ln718_2_reg_1358 <= icmp_ln718_2_fu_275_p2;
                icmp_ln718_3_reg_1373 <= icmp_ln718_3_fu_307_p2;
                icmp_ln718_4_reg_1388 <= icmp_ln718_4_fu_339_p2;
                icmp_ln718_5_reg_1403 <= icmp_ln718_5_fu_371_p2;
                icmp_ln718_6_reg_1418 <= icmp_ln718_6_fu_403_p2;
                icmp_ln718_7_reg_1433 <= icmp_ln718_7_fu_435_p2;
                icmp_ln718_reg_1328 <= icmp_ln718_fu_211_p2;
                icmp_ln768_1_reg_1353 <= icmp_ln768_1_fu_265_p2;
                icmp_ln768_2_reg_1368 <= icmp_ln768_2_fu_297_p2;
                icmp_ln768_3_reg_1383 <= icmp_ln768_3_fu_329_p2;
                icmp_ln768_4_reg_1398 <= icmp_ln768_4_fu_361_p2;
                icmp_ln768_5_reg_1413 <= icmp_ln768_5_fu_393_p2;
                icmp_ln768_6_reg_1428 <= icmp_ln768_6_fu_425_p2;
                icmp_ln768_7_reg_1443 <= icmp_ln768_7_fu_457_p2;
                icmp_ln768_reg_1338 <= icmp_ln768_fu_233_p2;
                icmp_ln879_1_reg_1348 <= icmp_ln879_1_fu_259_p2;
                icmp_ln879_2_reg_1363 <= icmp_ln879_2_fu_291_p2;
                icmp_ln879_3_reg_1378 <= icmp_ln879_3_fu_323_p2;
                icmp_ln879_4_reg_1393 <= icmp_ln879_4_fu_355_p2;
                icmp_ln879_5_reg_1408 <= icmp_ln879_5_fu_387_p2;
                icmp_ln879_6_reg_1423 <= icmp_ln879_6_fu_419_p2;
                icmp_ln879_7_reg_1438 <= icmp_ln879_7_fu_451_p2;
                icmp_ln879_reg_1333 <= icmp_ln879_fu_227_p2;
                tmp_data_V_4_0_reg_1256 <= data_V_data_0_V_dout;
                tmp_data_V_4_1_reg_1265 <= data_V_data_1_V_dout;
                tmp_data_V_4_2_reg_1274 <= data_V_data_2_V_dout;
                tmp_data_V_4_3_reg_1283 <= data_V_data_3_V_dout;
                tmp_data_V_4_4_reg_1292 <= data_V_data_4_V_dout;
                tmp_data_V_4_5_reg_1301 <= data_V_data_5_V_dout;
                tmp_data_V_4_6_reg_1310 <= data_V_data_6_V_dout;
                tmp_data_V_4_7_reg_1319 <= data_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_data_0_V_reg_1448 <= tmp_data_0_V_fu_553_p3;
                tmp_data_1_V_reg_1453 <= tmp_data_1_V_fu_651_p3;
                tmp_data_2_V_reg_1458 <= tmp_data_2_V_fu_749_p3;
                tmp_data_3_V_reg_1463 <= tmp_data_3_V_fu_847_p3;
                tmp_data_4_V_reg_1468 <= tmp_data_4_V_fu_945_p3;
                tmp_data_5_V_reg_1473 <= tmp_data_5_V_fu_1043_p3;
                tmp_data_6_V_reg_1478 <= tmp_data_6_V_fu_1141_p3;
                tmp_data_7_V_reg_1483 <= tmp_data_7_V_fu_1239_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, icmp_ln41_fu_163_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln41_fu_163_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln41_fu_163_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln415_1_fu_611_p2 <= std_logic_vector(unsigned(zext_ln415_1_fu_607_p1) + unsigned(trunc_ln708_s_fu_566_p4));
    add_ln415_2_fu_709_p2 <= std_logic_vector(unsigned(zext_ln415_2_fu_705_p1) + unsigned(trunc_ln708_1_fu_664_p4));
    add_ln415_3_fu_807_p2 <= std_logic_vector(unsigned(zext_ln415_3_fu_803_p1) + unsigned(trunc_ln708_2_fu_762_p4));
    add_ln415_4_fu_905_p2 <= std_logic_vector(unsigned(zext_ln415_4_fu_901_p1) + unsigned(trunc_ln708_3_fu_860_p4));
    add_ln415_5_fu_1003_p2 <= std_logic_vector(unsigned(zext_ln415_5_fu_999_p1) + unsigned(trunc_ln708_4_fu_958_p4));
    add_ln415_6_fu_1101_p2 <= std_logic_vector(unsigned(zext_ln415_6_fu_1097_p1) + unsigned(trunc_ln708_5_fu_1056_p4));
    add_ln415_7_fu_1199_p2 <= std_logic_vector(unsigned(zext_ln415_7_fu_1195_p1) + unsigned(trunc_ln708_6_fu_1154_p4));
    add_ln415_fu_513_p2 <= std_logic_vector(unsigned(zext_ln415_fu_509_p1) + unsigned(trunc_ln_fu_468_p4));
    and_ln415_1_fu_601_p2 <= (tmp_52_fu_594_p3 and or_ln412_1_fu_589_p2);
    and_ln415_2_fu_699_p2 <= (tmp_56_fu_692_p3 and or_ln412_2_fu_687_p2);
    and_ln415_3_fu_797_p2 <= (tmp_60_fu_790_p3 and or_ln412_3_fu_785_p2);
    and_ln415_4_fu_895_p2 <= (tmp_64_fu_888_p3 and or_ln412_4_fu_883_p2);
    and_ln415_5_fu_993_p2 <= (tmp_68_fu_986_p3 and or_ln412_5_fu_981_p2);
    and_ln415_6_fu_1091_p2 <= (tmp_72_fu_1084_p3 and or_ln412_6_fu_1079_p2);
    and_ln415_7_fu_1189_p2 <= (tmp_76_fu_1182_p3 and or_ln412_7_fu_1177_p2);
    and_ln415_fu_503_p2 <= (tmp_48_fu_496_p3 and or_ln412_fu_491_p2);
    and_ln416_1_fu_631_p2 <= (xor_ln416_1_fu_625_p2 and tmp_51_fu_582_p3);
    and_ln416_2_fu_729_p2 <= (xor_ln416_2_fu_723_p2 and tmp_55_fu_680_p3);
    and_ln416_3_fu_827_p2 <= (xor_ln416_3_fu_821_p2 and tmp_59_fu_778_p3);
    and_ln416_4_fu_925_p2 <= (xor_ln416_4_fu_919_p2 and tmp_63_fu_876_p3);
    and_ln416_5_fu_1023_p2 <= (xor_ln416_5_fu_1017_p2 and tmp_67_fu_974_p3);
    and_ln416_6_fu_1121_p2 <= (xor_ln416_6_fu_1115_p2 and tmp_71_fu_1072_p3);
    and_ln416_7_fu_1219_p2 <= (xor_ln416_7_fu_1213_p2 and tmp_75_fu_1170_p3);
    and_ln416_fu_533_p2 <= (xor_ln416_fu_527_p2 and tmp_47_fu_484_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln41_reg_1247, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg, io_acc_block_signal_op29, io_acc_block_signal_op201)
    begin
                ap_block_pp0_stage0_01001 <= (((io_acc_block_signal_op201 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0)) or ((io_acc_block_signal_op29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln41_reg_1247 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln41_reg_1247, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg, io_acc_block_signal_op29, io_acc_block_signal_op201)
    begin
                ap_block_pp0_stage0_11001 <= (((io_acc_block_signal_op201 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0)) or ((io_acc_block_signal_op29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln41_reg_1247 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln41_reg_1247, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg, io_acc_block_signal_op29, io_acc_block_signal_op201)
    begin
                ap_block_pp0_stage0_subdone <= (((io_acc_block_signal_op201 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0)) or ((io_acc_block_signal_op29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln41_reg_1247 = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(icmp_ln41_reg_1247, io_acc_block_signal_op29)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((io_acc_block_signal_op29 = ap_const_logic_0) and (icmp_ln41_reg_1247 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter3_assign_proc : process(icmp_ln41_reg_1247_pp0_iter2_reg, io_acc_block_signal_op201)
    begin
                ap_block_state5_pp0_stage0_iter3 <= ((io_acc_block_signal_op201 = ap_const_logic_0) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln41_fu_163_p2)
    begin
        if ((icmp_ln41_fu_163_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1247)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1247 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1247, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247 = ap_const_lv1_0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1247)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1247 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1247, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247 = ap_const_lv1_0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1247)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1247 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1247, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247 = ap_const_lv1_0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1247)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1247 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1247, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247 = ap_const_lv1_0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(data_V_data_4_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1247)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1247 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1247, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247 = ap_const_lv1_0))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(data_V_data_5_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1247)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1247 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1247, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247 = ap_const_lv1_0))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(data_V_data_6_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1247)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1247 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1247, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247 = ap_const_lv1_0))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(data_V_data_7_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1247)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1247 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1247, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247 = ap_const_lv1_0))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_169_p2 <= std_logic_vector(unsigned(i_0_reg_152) + unsigned(ap_const_lv7_1));
    icmp_ln1494_1_fu_561_p2 <= "1" when (signed(tmp_data_V_4_1_reg_1265) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_2_fu_659_p2 <= "1" when (signed(tmp_data_V_4_2_reg_1274) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_3_fu_757_p2 <= "1" when (signed(tmp_data_V_4_3_reg_1283) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_4_fu_855_p2 <= "1" when (signed(tmp_data_V_4_4_reg_1292) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_5_fu_953_p2 <= "1" when (signed(tmp_data_V_4_5_reg_1301) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_6_fu_1051_p2 <= "1" when (signed(tmp_data_V_4_6_reg_1310) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_7_fu_1149_p2 <= "1" when (signed(tmp_data_V_4_7_reg_1319) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_fu_463_p2 <= "1" when (signed(tmp_data_V_4_0_reg_1256) > signed(ap_const_lv16_0)) else "0";
    icmp_ln41_fu_163_p2 <= "1" when (i_0_reg_152 = ap_const_lv7_79) else "0";
    icmp_ln718_1_fu_243_p2 <= "0" when (trunc_ln718_1_fu_239_p1 = ap_const_lv7_0) else "1";
    icmp_ln718_2_fu_275_p2 <= "0" when (trunc_ln718_2_fu_271_p1 = ap_const_lv7_0) else "1";
    icmp_ln718_3_fu_307_p2 <= "0" when (trunc_ln718_3_fu_303_p1 = ap_const_lv7_0) else "1";
    icmp_ln718_4_fu_339_p2 <= "0" when (trunc_ln718_4_fu_335_p1 = ap_const_lv7_0) else "1";
    icmp_ln718_5_fu_371_p2 <= "0" when (trunc_ln718_5_fu_367_p1 = ap_const_lv7_0) else "1";
    icmp_ln718_6_fu_403_p2 <= "0" when (trunc_ln718_6_fu_399_p1 = ap_const_lv7_0) else "1";
    icmp_ln718_7_fu_435_p2 <= "0" when (trunc_ln718_7_fu_431_p1 = ap_const_lv7_0) else "1";
    icmp_ln718_fu_211_p2 <= "0" when (trunc_ln718_fu_207_p1 = ap_const_lv7_0) else "1";
    icmp_ln768_1_fu_265_p2 <= "1" when (p_Result_10_1_fu_249_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_2_fu_297_p2 <= "1" when (p_Result_10_2_fu_281_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_3_fu_329_p2 <= "1" when (p_Result_10_3_fu_313_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_4_fu_361_p2 <= "1" when (p_Result_10_4_fu_345_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_5_fu_393_p2 <= "1" when (p_Result_10_5_fu_377_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_6_fu_425_p2 <= "1" when (p_Result_10_6_fu_409_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_7_fu_457_p2 <= "1" when (p_Result_10_7_fu_441_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_fu_233_p2 <= "1" when (p_Result_s_fu_217_p4 = ap_const_lv5_0) else "0";
    icmp_ln879_1_fu_259_p2 <= "1" when (p_Result_10_1_fu_249_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_2_fu_291_p2 <= "1" when (p_Result_10_2_fu_281_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_3_fu_323_p2 <= "1" when (p_Result_10_3_fu_313_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_4_fu_355_p2 <= "1" when (p_Result_10_4_fu_345_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_5_fu_387_p2 <= "1" when (p_Result_10_5_fu_377_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_6_fu_419_p2 <= "1" when (p_Result_10_6_fu_409_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_7_fu_451_p2 <= "1" when (p_Result_10_7_fu_441_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_fu_227_p2 <= "1" when (p_Result_s_fu_217_p4 = ap_const_lv5_1F) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op201 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op29 <= (data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    or_ln412_1_fu_589_p2 <= (tmp_50_fu_575_p3 or icmp_ln718_1_reg_1343);
    or_ln412_2_fu_687_p2 <= (tmp_54_fu_673_p3 or icmp_ln718_2_reg_1358);
    or_ln412_3_fu_785_p2 <= (tmp_58_fu_771_p3 or icmp_ln718_3_reg_1373);
    or_ln412_4_fu_883_p2 <= (tmp_62_fu_869_p3 or icmp_ln718_4_reg_1388);
    or_ln412_5_fu_981_p2 <= (tmp_66_fu_967_p3 or icmp_ln718_5_reg_1403);
    or_ln412_6_fu_1079_p2 <= (tmp_70_fu_1065_p3 or icmp_ln718_6_reg_1418);
    or_ln412_7_fu_1177_p2 <= (tmp_74_fu_1163_p3 or icmp_ln718_7_reg_1433);
    or_ln412_fu_491_p2 <= (tmp_46_fu_477_p3 or icmp_ln718_reg_1328);
    p_Result_10_1_fu_249_p4 <= data_V_data_1_V_dout(15 downto 11);
    p_Result_10_2_fu_281_p4 <= data_V_data_2_V_dout(15 downto 11);
    p_Result_10_3_fu_313_p4 <= data_V_data_3_V_dout(15 downto 11);
    p_Result_10_4_fu_345_p4 <= data_V_data_4_V_dout(15 downto 11);
    p_Result_10_5_fu_377_p4 <= data_V_data_5_V_dout(15 downto 11);
    p_Result_10_6_fu_409_p4 <= data_V_data_6_V_dout(15 downto 11);
    p_Result_10_7_fu_441_p4 <= data_V_data_7_V_dout(15 downto 11);
    p_Result_s_fu_217_p4 <= data_V_data_0_V_dout(15 downto 11);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_reg_1448;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_1453;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_1458;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_1463;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_reg_1468;

    res_V_data_4_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= tmp_data_5_V_reg_1473;

    res_V_data_5_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= tmp_data_6_V_reg_1478;

    res_V_data_6_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= tmp_data_7_V_reg_1483;

    res_V_data_7_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1247_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1247_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln340_1_fu_643_p3 <= 
        add_ln415_1_fu_611_p2 when (select_ln777_1_fu_637_p3(0) = '1') else 
        ap_const_lv3_7;
    select_ln340_2_fu_741_p3 <= 
        add_ln415_2_fu_709_p2 when (select_ln777_2_fu_735_p3(0) = '1') else 
        ap_const_lv3_7;
    select_ln340_3_fu_839_p3 <= 
        add_ln415_3_fu_807_p2 when (select_ln777_3_fu_833_p3(0) = '1') else 
        ap_const_lv3_7;
    select_ln340_4_fu_937_p3 <= 
        add_ln415_4_fu_905_p2 when (select_ln777_4_fu_931_p3(0) = '1') else 
        ap_const_lv3_7;
    select_ln340_5_fu_1035_p3 <= 
        add_ln415_5_fu_1003_p2 when (select_ln777_5_fu_1029_p3(0) = '1') else 
        ap_const_lv3_7;
    select_ln340_6_fu_1133_p3 <= 
        add_ln415_6_fu_1101_p2 when (select_ln777_6_fu_1127_p3(0) = '1') else 
        ap_const_lv3_7;
    select_ln340_7_fu_1231_p3 <= 
        add_ln415_7_fu_1199_p2 when (select_ln777_7_fu_1225_p3(0) = '1') else 
        ap_const_lv3_7;
    select_ln340_fu_545_p3 <= 
        add_ln415_fu_513_p2 when (select_ln777_fu_539_p3(0) = '1') else 
        ap_const_lv3_7;
    select_ln777_1_fu_637_p3 <= 
        icmp_ln879_1_reg_1348 when (and_ln416_1_fu_631_p2(0) = '1') else 
        icmp_ln768_1_reg_1353;
    select_ln777_2_fu_735_p3 <= 
        icmp_ln879_2_reg_1363 when (and_ln416_2_fu_729_p2(0) = '1') else 
        icmp_ln768_2_reg_1368;
    select_ln777_3_fu_833_p3 <= 
        icmp_ln879_3_reg_1378 when (and_ln416_3_fu_827_p2(0) = '1') else 
        icmp_ln768_3_reg_1383;
    select_ln777_4_fu_931_p3 <= 
        icmp_ln879_4_reg_1393 when (and_ln416_4_fu_925_p2(0) = '1') else 
        icmp_ln768_4_reg_1398;
    select_ln777_5_fu_1029_p3 <= 
        icmp_ln879_5_reg_1408 when (and_ln416_5_fu_1023_p2(0) = '1') else 
        icmp_ln768_5_reg_1413;
    select_ln777_6_fu_1127_p3 <= 
        icmp_ln879_6_reg_1423 when (and_ln416_6_fu_1121_p2(0) = '1') else 
        icmp_ln768_6_reg_1428;
    select_ln777_7_fu_1225_p3 <= 
        icmp_ln879_7_reg_1438 when (and_ln416_7_fu_1219_p2(0) = '1') else 
        icmp_ln768_7_reg_1443;
    select_ln777_fu_539_p3 <= 
        icmp_ln879_reg_1333 when (and_ln416_fu_533_p2(0) = '1') else 
        icmp_ln768_reg_1338;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_46_fu_477_p3 <= tmp_data_V_4_0_reg_1256(8 downto 8);
    tmp_47_fu_484_p3 <= tmp_data_V_4_0_reg_1256(10 downto 10);
    tmp_48_fu_496_p3 <= tmp_data_V_4_0_reg_1256(7 downto 7);
    tmp_49_fu_519_p3 <= add_ln415_fu_513_p2(2 downto 2);
    tmp_50_fu_575_p3 <= tmp_data_V_4_1_reg_1265(8 downto 8);
    tmp_51_fu_582_p3 <= tmp_data_V_4_1_reg_1265(10 downto 10);
    tmp_52_fu_594_p3 <= tmp_data_V_4_1_reg_1265(7 downto 7);
    tmp_53_fu_617_p3 <= add_ln415_1_fu_611_p2(2 downto 2);
    tmp_54_fu_673_p3 <= tmp_data_V_4_2_reg_1274(8 downto 8);
    tmp_55_fu_680_p3 <= tmp_data_V_4_2_reg_1274(10 downto 10);
    tmp_56_fu_692_p3 <= tmp_data_V_4_2_reg_1274(7 downto 7);
    tmp_57_fu_715_p3 <= add_ln415_2_fu_709_p2(2 downto 2);
    tmp_58_fu_771_p3 <= tmp_data_V_4_3_reg_1283(8 downto 8);
    tmp_59_fu_778_p3 <= tmp_data_V_4_3_reg_1283(10 downto 10);
    tmp_60_fu_790_p3 <= tmp_data_V_4_3_reg_1283(7 downto 7);
    tmp_61_fu_813_p3 <= add_ln415_3_fu_807_p2(2 downto 2);
    tmp_62_fu_869_p3 <= tmp_data_V_4_4_reg_1292(8 downto 8);
    tmp_63_fu_876_p3 <= tmp_data_V_4_4_reg_1292(10 downto 10);
    tmp_64_fu_888_p3 <= tmp_data_V_4_4_reg_1292(7 downto 7);
    tmp_65_fu_911_p3 <= add_ln415_4_fu_905_p2(2 downto 2);
    tmp_66_fu_967_p3 <= tmp_data_V_4_5_reg_1301(8 downto 8);
    tmp_67_fu_974_p3 <= tmp_data_V_4_5_reg_1301(10 downto 10);
    tmp_68_fu_986_p3 <= tmp_data_V_4_5_reg_1301(7 downto 7);
    tmp_69_fu_1009_p3 <= add_ln415_5_fu_1003_p2(2 downto 2);
    tmp_70_fu_1065_p3 <= tmp_data_V_4_6_reg_1310(8 downto 8);
    tmp_71_fu_1072_p3 <= tmp_data_V_4_6_reg_1310(10 downto 10);
    tmp_72_fu_1084_p3 <= tmp_data_V_4_6_reg_1310(7 downto 7);
    tmp_73_fu_1107_p3 <= add_ln415_6_fu_1101_p2(2 downto 2);
    tmp_74_fu_1163_p3 <= tmp_data_V_4_7_reg_1319(8 downto 8);
    tmp_75_fu_1170_p3 <= tmp_data_V_4_7_reg_1319(10 downto 10);
    tmp_76_fu_1182_p3 <= tmp_data_V_4_7_reg_1319(7 downto 7);
    tmp_77_fu_1205_p3 <= add_ln415_7_fu_1199_p2(2 downto 2);
    tmp_data_0_V_fu_553_p3 <= 
        select_ln340_fu_545_p3 when (icmp_ln1494_fu_463_p2(0) = '1') else 
        ap_const_lv3_0;
    tmp_data_1_V_fu_651_p3 <= 
        select_ln340_1_fu_643_p3 when (icmp_ln1494_1_fu_561_p2(0) = '1') else 
        ap_const_lv3_0;
    tmp_data_2_V_fu_749_p3 <= 
        select_ln340_2_fu_741_p3 when (icmp_ln1494_2_fu_659_p2(0) = '1') else 
        ap_const_lv3_0;
    tmp_data_3_V_fu_847_p3 <= 
        select_ln340_3_fu_839_p3 when (icmp_ln1494_3_fu_757_p2(0) = '1') else 
        ap_const_lv3_0;
    tmp_data_4_V_fu_945_p3 <= 
        select_ln340_4_fu_937_p3 when (icmp_ln1494_4_fu_855_p2(0) = '1') else 
        ap_const_lv3_0;
    tmp_data_5_V_fu_1043_p3 <= 
        select_ln340_5_fu_1035_p3 when (icmp_ln1494_5_fu_953_p2(0) = '1') else 
        ap_const_lv3_0;
    tmp_data_6_V_fu_1141_p3 <= 
        select_ln340_6_fu_1133_p3 when (icmp_ln1494_6_fu_1051_p2(0) = '1') else 
        ap_const_lv3_0;
    tmp_data_7_V_fu_1239_p3 <= 
        select_ln340_7_fu_1231_p3 when (icmp_ln1494_7_fu_1149_p2(0) = '1') else 
        ap_const_lv3_0;
    trunc_ln708_1_fu_664_p4 <= tmp_data_V_4_2_reg_1274(10 downto 8);
    trunc_ln708_2_fu_762_p4 <= tmp_data_V_4_3_reg_1283(10 downto 8);
    trunc_ln708_3_fu_860_p4 <= tmp_data_V_4_4_reg_1292(10 downto 8);
    trunc_ln708_4_fu_958_p4 <= tmp_data_V_4_5_reg_1301(10 downto 8);
    trunc_ln708_5_fu_1056_p4 <= tmp_data_V_4_6_reg_1310(10 downto 8);
    trunc_ln708_6_fu_1154_p4 <= tmp_data_V_4_7_reg_1319(10 downto 8);
    trunc_ln708_s_fu_566_p4 <= tmp_data_V_4_1_reg_1265(10 downto 8);
    trunc_ln718_1_fu_239_p1 <= data_V_data_1_V_dout(7 - 1 downto 0);
    trunc_ln718_2_fu_271_p1 <= data_V_data_2_V_dout(7 - 1 downto 0);
    trunc_ln718_3_fu_303_p1 <= data_V_data_3_V_dout(7 - 1 downto 0);
    trunc_ln718_4_fu_335_p1 <= data_V_data_4_V_dout(7 - 1 downto 0);
    trunc_ln718_5_fu_367_p1 <= data_V_data_5_V_dout(7 - 1 downto 0);
    trunc_ln718_6_fu_399_p1 <= data_V_data_6_V_dout(7 - 1 downto 0);
    trunc_ln718_7_fu_431_p1 <= data_V_data_7_V_dout(7 - 1 downto 0);
    trunc_ln718_fu_207_p1 <= data_V_data_0_V_dout(7 - 1 downto 0);
    trunc_ln_fu_468_p4 <= tmp_data_V_4_0_reg_1256(10 downto 8);
    xor_ln416_1_fu_625_p2 <= (tmp_53_fu_617_p3 xor ap_const_lv1_1);
    xor_ln416_2_fu_723_p2 <= (tmp_57_fu_715_p3 xor ap_const_lv1_1);
    xor_ln416_3_fu_821_p2 <= (tmp_61_fu_813_p3 xor ap_const_lv1_1);
    xor_ln416_4_fu_919_p2 <= (tmp_65_fu_911_p3 xor ap_const_lv1_1);
    xor_ln416_5_fu_1017_p2 <= (tmp_69_fu_1009_p3 xor ap_const_lv1_1);
    xor_ln416_6_fu_1115_p2 <= (tmp_73_fu_1107_p3 xor ap_const_lv1_1);
    xor_ln416_7_fu_1213_p2 <= (tmp_77_fu_1205_p3 xor ap_const_lv1_1);
    xor_ln416_fu_527_p2 <= (tmp_49_fu_519_p3 xor ap_const_lv1_1);
    zext_ln415_1_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_1_fu_601_p2),3));
    zext_ln415_2_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_2_fu_699_p2),3));
    zext_ln415_3_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_3_fu_797_p2),3));
    zext_ln415_4_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_4_fu_895_p2),3));
    zext_ln415_5_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_5_fu_993_p2),3));
    zext_ln415_6_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_6_fu_1091_p2),3));
    zext_ln415_7_fu_1195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_7_fu_1189_p2),3));
    zext_ln415_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_fu_503_p2),3));
end behav;
