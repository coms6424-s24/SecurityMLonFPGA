// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Block_myproject_axi_exit136_proc374_HH_
#define _Block_myproject_axi_exit136_proc374_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Block_myproject_axi_exit136_proc374 : public sc_module {
    // Port declarations 40
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > out_local_V_data_0_V_dout;
    sc_in< sc_logic > out_local_V_data_0_V_empty_n;
    sc_out< sc_logic > out_local_V_data_0_V_read;
    sc_in< sc_lv<16> > out_local_V_data_1_V_dout;
    sc_in< sc_logic > out_local_V_data_1_V_empty_n;
    sc_out< sc_logic > out_local_V_data_1_V_read;
    sc_in< sc_lv<16> > out_local_V_data_2_V_dout;
    sc_in< sc_logic > out_local_V_data_2_V_empty_n;
    sc_out< sc_logic > out_local_V_data_2_V_read;
    sc_in< sc_lv<16> > out_local_V_data_3_V_dout;
    sc_in< sc_logic > out_local_V_data_3_V_empty_n;
    sc_out< sc_logic > out_local_V_data_3_V_read;
    sc_in< sc_lv<16> > out_local_V_data_4_V_dout;
    sc_in< sc_logic > out_local_V_data_4_V_empty_n;
    sc_out< sc_logic > out_local_V_data_4_V_read;
    sc_in< sc_lv<16> > out_local_V_data_5_V_dout;
    sc_in< sc_logic > out_local_V_data_5_V_empty_n;
    sc_out< sc_logic > out_local_V_data_5_V_read;
    sc_in< sc_lv<16> > out_local_V_data_6_V_dout;
    sc_in< sc_logic > out_local_V_data_6_V_empty_n;
    sc_out< sc_logic > out_local_V_data_6_V_read;
    sc_in< sc_lv<16> > out_local_V_data_7_V_dout;
    sc_in< sc_logic > out_local_V_data_7_V_empty_n;
    sc_out< sc_logic > out_local_V_data_7_V_read;
    sc_in< sc_lv<16> > out_local_V_data_8_V_dout;
    sc_in< sc_logic > out_local_V_data_8_V_empty_n;
    sc_out< sc_logic > out_local_V_data_8_V_read;
    sc_in< sc_lv<16> > out_local_V_data_9_V_dout;
    sc_in< sc_logic > out_local_V_data_9_V_empty_n;
    sc_out< sc_logic > out_local_V_data_9_V_read;
    sc_out< sc_lv<16> > tmp_data_V_din;
    sc_in< sc_logic > tmp_data_V_full_n;
    sc_out< sc_logic > tmp_data_V_write;


    // Module declarations
    Block_myproject_axi_exit136_proc374(sc_module_name name);
    SC_HAS_PROCESS(Block_myproject_axi_exit136_proc374);

    ~Block_myproject_axi_exit136_proc374();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > out_local_V_data_0_V_blk_n;
    sc_signal< sc_logic > out_local_V_data_1_V_blk_n;
    sc_signal< sc_logic > out_local_V_data_2_V_blk_n;
    sc_signal< sc_logic > out_local_V_data_3_V_blk_n;
    sc_signal< sc_logic > out_local_V_data_4_V_blk_n;
    sc_signal< sc_logic > out_local_V_data_5_V_blk_n;
    sc_signal< sc_logic > out_local_V_data_6_V_blk_n;
    sc_signal< sc_logic > out_local_V_data_7_V_blk_n;
    sc_signal< sc_logic > out_local_V_data_8_V_blk_n;
    sc_signal< sc_logic > out_local_V_data_9_V_blk_n;
    sc_signal< sc_logic > tmp_data_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<16> > tmp_data_V_16_12_reg_110;
    sc_signal< sc_logic > io_acc_block_signal_op11;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<16> > tmp_data_V_16_23_reg_115;
    sc_signal< sc_lv<16> > tmp_data_V_16_34_reg_120;
    sc_signal< sc_lv<16> > tmp_data_V_16_45_reg_125;
    sc_signal< sc_lv<16> > tmp_data_V_16_56_reg_130;
    sc_signal< sc_lv<16> > tmp_data_V_16_67_reg_135;
    sc_signal< sc_lv<16> > tmp_data_V_16_78_reg_140;
    sc_signal< sc_lv<16> > tmp_data_V_16_89_reg_145;
    sc_signal< sc_lv<16> > tmp_data_V_16_910_reg_150;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_io_acc_block_signal_op11();
    void thread_out_local_V_data_0_V_blk_n();
    void thread_out_local_V_data_0_V_read();
    void thread_out_local_V_data_1_V_blk_n();
    void thread_out_local_V_data_1_V_read();
    void thread_out_local_V_data_2_V_blk_n();
    void thread_out_local_V_data_2_V_read();
    void thread_out_local_V_data_3_V_blk_n();
    void thread_out_local_V_data_3_V_read();
    void thread_out_local_V_data_4_V_blk_n();
    void thread_out_local_V_data_4_V_read();
    void thread_out_local_V_data_5_V_blk_n();
    void thread_out_local_V_data_5_V_read();
    void thread_out_local_V_data_6_V_blk_n();
    void thread_out_local_V_data_6_V_read();
    void thread_out_local_V_data_7_V_blk_n();
    void thread_out_local_V_data_7_V_read();
    void thread_out_local_V_data_8_V_blk_n();
    void thread_out_local_V_data_8_V_read();
    void thread_out_local_V_data_9_V_blk_n();
    void thread_out_local_V_data_9_V_read();
    void thread_tmp_data_V_blk_n();
    void thread_tmp_data_V_din();
    void thread_tmp_data_V_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
